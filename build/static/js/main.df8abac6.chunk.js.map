{"version":3,"sources":["components/chat/Message.js","components/chat/MessageList.js","components/chat/SendMessageForm.js","components/chat/users/User.js","components/chat/users/UserList.js","components/chat/ChatLayout.js","components/VideoScreen.js","components/NewRoomScreen.js","App.js","serviceWorker.js","index.js","Constants.js"],"names":["Message","_ref","username","text","react_default","a","createElement","className","MessageList","node","ReactDOM","findDOMNode","this","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","props","messages","map","message","index","chat_Message","key","Component","SendMessageForm","state","handleChange","e","_this","setState","Object","defineProperty","target","id","value","handleSubmit","preventDefault","sendMessage","onSubmit","lib","s","placeholder","onChange","User","UserList","users","user","users_User","ChatLayout","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","sendMassage","socket","emit","SEND_MESSAGE","inherits","createClass","header","icon","users_UserList","room","chat_MessageList","chat_SendMessageForm","io","require","socketUrl","process","opts","height","width","playerVars","controls","rel","modestbranding","autoplay","VideoScreen","player","videoUrl","onSocketMethods","on","JOIN_ROOM","ASK_FOR_VIDEO_INFORMATION","console","log","PLAY","playVideo","PAUSE","pauseVideo","SYNC_TIME","currentTime","syncTime","NEW_VIDEO","loadVideoById","videoId","getYoutubeIdByUrl","data","url","getVideoUrl","getCurrentTime","SYNC_VIDEO_INFORMATION","startSeconds","RECEIVED_MESSAGE","toConsumableArray","ASK_FOR_USERNAME","SEND_USERNAME","seekTo","undefined","replace","split","onReady","onStateChanged","getPlayerState","Row_default","Col_default","xl","YouTube","onStateChange","chat_ChatLayout","type","NewRoomScreen","handleRoomNameClick","createRandomRoomName","possible","i","charAt","Math","floor","random","label","required","onClick","App","currentScreen","screen","components_NewRoomScreen","components_VideoScreen","Boolean","window","location","hostname","match","config","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","ASK_FOR_VIDEO_URL"],"mappings":"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","file":"static/js/main.df8abac6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Message = ({ username, text }) => {\r\n  return (\r\n    <div className=\"message-container\">\r\n      <span className=\"blue-text\">{ username }</span>\r\n      <span className=\"white-text\">{ text }</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Message from './Message';\r\n\r\nclass MessageList extends Component {\r\n\r\n  componentWillUpdate() {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 100 >= node.scrollHeight;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.shouldScrollToBottom) {\r\n      const node = ReactDOM.findDOMNode(this);\r\n      node.scrollTop = node.scrollHeight;\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"chat-container\">\r\n        {this.props.messages.map((message, index) => {\r\n          return (\r\n            <Message key={index} username={message.username} text={message.text}/>\r\n          )\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageList","import React, { Component } from 'react';\r\nimport { Input } from 'react-materialize'\r\n\r\nclass SendMessageForm extends Component {\r\n\r\n  state = {\r\n    message: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.sendMessage(this.state.message);\r\n    this.setState({\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <Input s={12} className=\"white-text\" placeholder=\"Type your message\" id=\"message\" onChange={this.handleChange} value={this.state.message} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SendMessageForm\r\n","import React from 'react';\r\n\r\nconst User = ({ username }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"blue-text\">{ username }</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport User from './User';\r\n\r\nconst UserList = ({ users }) => {\r\n  return (\r\n    <div className=\"user-list\">\r\n      {users.map((user, index) => {\r\n        return (\r\n          <User key={index} username={user} />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList","import React, { Component } from 'react';\r\nimport MessageList from './MessageList';\r\nimport SendMessageForm from './SendMessageForm';\r\nimport { SEND_MESSAGE } from '../../Constants';\r\nimport { Col, Row, Collapsible, CollapsibleItem } from 'react-materialize';\r\nimport UserList from './users/UserList';\r\n\r\nexport class ChatLayout extends Component {\r\n\r\n  sendMassage = (message) => {\r\n    this.props.socket.emit(SEND_MESSAGE, {\r\n      username: this.props.username,\r\n      text: message\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Collapsible>\r\n        <CollapsibleItem header={\"Online Users: \" + this.props.users.length} icon=\"contacts\" className=\"white-text\">\r\n          <UserList users={this.props.users}/>\r\n        </CollapsibleItem>\r\n        <CollapsibleItem header=\"Chat\" icon=\"chat_bubble\" className=\"white-text\">\r\n          <div>Your username: {this.props.username}</div>\r\n          <div>Your room: {this.props.room}</div>\r\n          <p></p>\r\n          <Row>\r\n            <Col s={12}>\r\n              <MessageList messages={this.props.messages}/>\r\n            </Col>\r\n              <SendMessageForm className=\"myInput\" sendMessage={this.sendMassage}/> \r\n          </Row>\r\n        </CollapsibleItem>\r\n      </Collapsible>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatLayout","import React, { Component } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { PLAY, PAUSE, SYNC_TIME, NEW_VIDEO, ASK_FOR_VIDEO_INFORMATION,\r\n   SYNC_VIDEO_INFORMATION, JOIN_ROOM, RECEIVED_MESSAGE,\r\n   ASK_FOR_USERNAME, SEND_USERNAME } from '../Constants'\r\nimport { Button, Input } from 'react-materialize';\r\nimport ChatLayout from './chat/ChatLayout';\r\nimport Row from 'react-materialize/lib/Row';\r\nimport Col from 'react-materialize/lib/Col';\r\n\r\nvar io = require('socket.io-client');\r\nconst socketUrl = process.env.REACT_APP_SOCKET_URL || \"/\";\r\n\r\nconst opts = {\r\n  height: '390',\r\n  width: '640',\r\n  playerVars: { // https://developers.google.com/youtube/player_parameters\r\n    controls: 2,\r\n    rel: 0,\r\n    modestbranding: 1,\r\n    autoplay: 1,\r\n  }\r\n}\r\n\r\nexport class VideoScreen extends Component {\r\n\r\n  state = {\r\n    socket: null,\r\n    player: null,\r\n    videoUrl: '',\r\n    messages: [],\r\n    users: []\r\n  }\r\n\r\n  onSocketMethods = (socket) => {\r\n    socket.on('connect', () => {\r\n      socket.emit(JOIN_ROOM, {\r\n        room: this.props.room,\r\n        username: this.props.username,\r\n      });\r\n      socket.emit(ASK_FOR_VIDEO_INFORMATION);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log(\"Disconnected\");\r\n    });\r\n\r\n    socket.on(PLAY, () => {\r\n      this.state.player.playVideo();\r\n    });\r\n\r\n    socket.on(PAUSE, () => {\r\n      this.state.player.pauseVideo();\r\n    });\r\n\r\n    socket.on(SYNC_TIME, (currentTime) => {\r\n      this.syncTime(currentTime);\r\n    })\r\n\r\n    socket.on(NEW_VIDEO, (videoUrl) => {\r\n      this.state.player.loadVideoById({\r\n        videoId: this.getYoutubeIdByUrl(videoUrl)\r\n      });\r\n      this.setState({\r\n        videoUrl: ''\r\n      });\r\n    });\r\n\r\n    socket.on(ASK_FOR_VIDEO_INFORMATION, () => {\r\n      const data = {\r\n        url: this.state.player.getVideoUrl(),\r\n        currentTime: this.state.player.getCurrentTime()\r\n      }\r\n      socket.emit(SYNC_VIDEO_INFORMATION, data);\r\n    });\r\n\r\n    socket.on(SYNC_VIDEO_INFORMATION, (data) => {\r\n      const videoId = this.getYoutubeIdByUrl(data.url)\r\n      this.state.player.loadVideoById({\r\n        videoId: videoId,\r\n        startSeconds: data.currentTime\r\n      });\r\n    });\r\n\r\n    socket.on(RECEIVED_MESSAGE, (data) => {\r\n      this.setState({\r\n        messages: [...this.state.messages, {\r\n          username: data.username,\r\n          text: data.text\r\n        }]\r\n      });\r\n    });\r\n\r\n    socket.on(ASK_FOR_USERNAME, () => {\r\n      this.setState({users: []})\r\n      this.state.socket.emit(SEND_USERNAME, this.props.username);\r\n    });\r\n\r\n    socket.on(SEND_USERNAME, (username) => {\r\n\r\n      this.setState({\r\n        users: [...this.state.users, username]\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  syncTime = (currentTime) => {\r\n    if (this.state.player.getCurrentTime() < currentTime - 0.5 || this.state.player.getCurrentTime() > currentTime + 0.5) {\r\n      this.state.player.seekTo(currentTime);\r\n      this.state.player.playVideo();\r\n    }\r\n  }\r\n\r\n  getYoutubeIdByUrl = (url) => {\r\n    var ID = '';\r\n    \r\n    url = url.replace(/(>|<)/gi,'').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n\r\n    if(url[2] !== undefined) {\r\n      ID = url[2].split(/[^0-9a-z_-]/i);\r\n      ID = ID[0];\r\n    }\r\n    else {\r\n      ID = url;\r\n    }\r\n    return ID;\r\n  }\r\n\r\n  onReady = (e) => {\r\n    this.setState({\r\n      player: e.target\r\n    });\r\n\r\n    // Socket\r\n    const socket = io(socketUrl);\r\n    this.setState({socket});\r\n    this.onSocketMethods(socket);\r\n  }\r\n\r\n  onStateChanged = (e) => {\r\n    switch (this.state.player.getPlayerState()) {\r\n      case -1:\r\n        this.state.socket.emit(PLAY);\r\n        break;\r\n      case 0:\r\n        break;\r\n      case 1:\r\n        this.state.socket.emit(SYNC_TIME, this.state.player.getCurrentTime());\r\n        this.state.socket.emit(PLAY);\r\n        break;\r\n      case 2:\r\n        this.state.socket.emit(PAUSE);\r\n        break;\r\n      case 3:\r\n        this.state.socket.emit(SYNC_TIME, this.state.player.getCurrentTime());\r\n        break;\r\n      case 5:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.state.socket.emit(NEW_VIDEO, this.state.videoUrl);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col s={12} xl={9}>\r\n            <div className=\"responsive-video\">\r\n              <YouTube \r\n                //videoId=\"rTs4ZpM3xWs\"\r\n                videoId=\"RsGDjyWHBA0\"\r\n                opts={opts}\r\n                onReady={this.onReady}\r\n                onStateChange={this.onStateChanged}\r\n                className=\"yt\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col s={12} xl={3}>\r\n            <ChatLayout \r\n              username={this.props.username} \r\n              room={this.props.room} \r\n              messages={this.state.messages}\r\n              users={this.state.users}\r\n              socket={this.state.socket} />\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Row>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <Input s={12} className=\"white-text\" type=\"text\" placeholder=\"Insert Youtube link\" id=\"videoUrl\" value={this.state.videoUrl} onChange={this.handleChange} />\r\n            <Col>\r\n              <Button s={12} type=\"submit\" className=\"black\">Load new Video</Button>\r\n            </Col>\r\n          </form>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoScreen\r\n","import React, { Component } from 'react';\r\nimport { Row, Input, Button, Col } from 'react-materialize';\r\n\r\nclass NewRoomScreen extends Component {\r\n\r\n  state = {\r\n    room: '',\r\n    username: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.username, this.state.room);\r\n  }\r\n\r\n  handleRoomNameClick = (e) => {\r\n    this.setState({\r\n      room: this.createRandomRoomName()\r\n    })\r\n  }\r\n\r\n  createRandomRoomName = () => {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < 16; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <h2 className=\"white-text\">Create or join a room</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Input className=\"white-text\" placeholder=\"\" s={12} label=\"Your username\" value={this.state.username} required onChange={this.handleChange} id=\"username\"/>\r\n          <Input className=\"white-text\" placeholder=\"\" s={12} label=\"Room ID\" required value={this.state.room} onChange={this.handleChange} id=\"room\"/>\r\n          <Col>\r\n            <Button className=\"black\">Submit</Button>\r\n          </Col>\r\n        </form>\r\n        <Button className=\"black\" onClick={this.handleRoomNameClick}>Random room name</Button>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewRoomScreen\r\n","import React, { Component } from 'react';\r\nimport VideoScreen from './components/VideoScreen';\r\nimport NewRoomScreen from './components/NewRoomScreen';\r\nimport { Container } from 'react-materialize';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    username: '',\r\n    room: '',\r\n    currentScreen: 'default',\r\n  }\r\n\r\n  onSubmit = (username, room) => {\r\n    this.setState({\r\n      username,\r\n      room,\r\n      currentScreen: 'VideoScreen'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var screen;\r\n    if (this.state.currentScreen === 'default') {\r\n      screen = <NewRoomScreen onSubmit={this.onSubmit}/>\r\n    }\r\n    if (this.state.currentScreen === 'VideoScreen') {\r\n      screen = <VideoScreen room={this.state.room} username={this.state.username}/>\r\n    }\r\n\r\n    return (\r\n      <Container >\r\n        {screen}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-materialize';\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = {\r\n  PLAY: 'PLAY',\r\n  PAUSE: 'PAUSE',\r\n  SYNC_TIME: 'SYNC_TIME',\r\n  NEW_VIDEO: 'NEW_VIDEO',\r\n  ASK_FOR_VIDEO_URL: 'ASK_FOR_VIDEO_URL',\r\n  SYNC_VIDEO_INFORMATION: 'SYNC_VIDEO_INFORMATION',\r\n  ASK_FOR_VIDEO_INFORMATION: 'ASK_FOR_VIDEO_INFORMATION',\r\n  JOIN_ROOM: 'JOIN_ROOM',\r\n  SEND_MESSAGE: 'SEND_MESSAGE',\r\n  RECEIVED_MESSAGE: 'RECEIVED_MESSAGE',\r\n  ASK_FOR_USERNAME: 'ASK_FOR_USERNAME',\r\n  SEND_USERNAME: 'SEND_USERNAME'\r\n}"],"sourceRoot":""}